{"ast":null,"code":"import \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wangenfei/Desktop/workplace/reactManual/sharingHomesNext/sharingHomesSSR/components/common/inputShow/inputShow.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport './input.css';\n\nclass InputShow extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"onInputChange\", e => {\n      console.log('onInputChange');\n      let value = e.target.value;\n\n      if (value) {\n        this.props.getData(value);\n        this.setState({\n          isListShow: true\n        });\n      } else {\n        this.setState({\n          isListShow: false\n        });\n      }\n    });\n\n    this.state = {\n      isListShow: false\n    };\n  }\n\n  render() {\n    const {\n      placeholder,\n      data\n    } = this.props;\n    const {\n      isListShow\n    } = this.state;\n    let classCurrent = 'searchList';\n\n    if (isListShow) {\n      classCurrent += ' showList';\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(_Input, {\n      className: \"searchInput\",\n      placeholder: placeholder,\n      onChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: classCurrent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, data)));\n  }\n\n}\n\nexport default connect()(InputShow);","map":{"version":3,"sources":["/Users/wangenfei/Desktop/workplace/reactManual/sharingHomesNext/sharingHomesSSR/components/common/inputShow/inputShow.js"],"names":["React","Component","connect","_","InputShow","constructor","e","console","log","value","target","props","getData","setState","isListShow","state","render","placeholder","data","classCurrent","onInputChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAEhCI,EAAAA,WAAW,GAAE;AACX;;AADW,2CAOIC,CAAD,IAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAIC,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASD,KAArB;;AACA,UAAGA,KAAH,EAAS;AACP,aAAKE,KAAL,CAAWC,OAAX,CAAmBH,KAAnB;AACA,aAAKI,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAC;AADC,SAAd;AAGD,OALD,MAKK;AACH,aAAKD,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAC;AADC,SAAd;AAGD;AACF,KApBY;;AAEX,SAAKC,KAAL,GAAW;AACTD,MAAAA,UAAU,EAAC;AADF,KAAX;AAGD;;AAkBDE,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwB,KAAKP,KAAnC;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AAEA,QAAII,YAAY,GAAG,YAAnB;;AACA,QAAGL,UAAH,EAAc;AACZK,MAAAA,YAAY,IAAI,WAAhB;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,WAAW,EAAEF,WAFf;AAGE,MAAA,QAAQ,EAAE,KAAKG,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAK,MAAA,SAAS,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,CANF,CADF,CADF;AAcD;;AAhD+B;;AAmDlC,eAAehB,OAAO,GAAGE,SAAH,CAAtB","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport { Input } from 'antd'\nimport _ from 'lodash';\nimport './input.css'\n\nclass InputShow extends Component {\n\n  constructor(){\n    super()\n    this.state={\n      isListShow:false\n    }\n  }\n  \n  onInputChange = (e) =>{\n    console.log('onInputChange')\n    let value = e.target.value;\n    if(value){\n      this.props.getData(value)\n      this.setState({\n        isListShow:true\n      })\n    }else{\n      this.setState({\n        isListShow:false\n      })\n    }\n  }\n  \n\n  render () {\n    const { placeholder, data } = this.props;\n    const { isListShow } = this.state;\n\n    let classCurrent = 'searchList'\n    if(isListShow){\n      classCurrent += ' showList'\n    }\n   \n    return (\n      <div>\n        <div className='search'>\n          <Input\n            className='searchInput'\n            placeholder={placeholder}\n            onChange={this.onInputChange}\n          />\n          <div className={classCurrent}>\n            {data}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect()(InputShow)"]},"metadata":{},"sourceType":"module"}