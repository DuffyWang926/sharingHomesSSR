{"ast":null,"code":"/* global fetch */\nimport { delay } from 'redux-saga';\nimport { all, call, put, take, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport { MAP_CENTER } from '../actionTypes/details';\nimport { mapCenterSuccess } from '../actions/details';\nimport { failure } from '../actions/actions';\nimport { getMapCenterData } from '../api/details';\nes6promise.polyfill();\n\nfunction* mapCenterDataSaga(action) {\n  const {\n    payload\n  } = action;\n\n  try {\n    const {\n      data\n    } = yield call(getMapCenterData(payload));\n    yield put(mapCenterSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* mapCenterSaga() {\n  yield all([takeLatest(MAP_CENTER, mapCenterDataSaga)]);\n}\n\nconst detailsSaga = [mapCenterSaga];\nexport default detailsSaga;","map":{"version":3,"sources":["/Users/wangenfei/Desktop/workplace/reactManual/sharingHomesNext/sharingHomesSSR/saga/details.js"],"names":["delay","all","call","put","take","takeLatest","es6promise","MAP_CENTER","mapCenterSuccess","failure","getMapCenterData","polyfill","mapCenterDataSaga","action","payload","data","err","mapCenterSaga","detailsSaga"],"mappings":"AAAA;AAEA,SAAQA,KAAR,QAAoB,YAApB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAA+C,oBAA/C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,oBAAP;AAEA,SAAUC,UAAV,QAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAkC,oBAAlC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAEAJ,UAAU,CAACK,QAAX;;AAGA,UAAWC,iBAAX,CAA8BC,MAA9B,EAAsC;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AACA,MAAI;AACF,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMb,IAAI,CAACQ,gBAAgB,CAACI,OAAD,CAAjB,CAAzB;AAEA,UAAMX,GAAG,CAACK,gBAAgB,CAACO,IAAD,CAAjB,CAAT;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZ,UAAMb,GAAG,CAACM,OAAO,CAACO,GAAD,CAAR,CAAT;AACD;AACF;;AAED,UAAWC,aAAX,GAA4B;AAC1B,QAAMhB,GAAG,CAAC,CACRI,UAAU,CAACE,UAAD,EAAaK,iBAAb,CADF,CAAD,CAAT;AAGD;;AAED,MAAMM,WAAW,GAAG,CAClBD,aADkB,CAApB;AAIA,eAAeC,WAAf","sourcesContent":["/* global fetch */\n\nimport {delay} from 'redux-saga'\nimport {all, call, put, take, takeLatest} from 'redux-saga/effects'\nimport es6promise from 'es6-promise'\nimport 'isomorphic-unfetch'\n\nimport {  MAP_CENTER } from '../actionTypes/details'\nimport { mapCenterSuccess  } from '../actions/details'\nimport { failure } from '../actions/actions'\nimport { getMapCenterData } from '../api/details'\n\nes6promise.polyfill()\n\n\nfunction * mapCenterDataSaga (action) {\n  const { payload } = action\n  try {\n    const {data} = yield call(getMapCenterData(payload))\n\n    yield put(mapCenterSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction * mapCenterSaga () {\n  yield all([\n    takeLatest(MAP_CENTER, mapCenterDataSaga)\n  ])\n}\n\nconst detailsSaga = [\n  mapCenterSaga,\n  \n]\nexport default detailsSaga"]},"metadata":{},"sourceType":"module"}