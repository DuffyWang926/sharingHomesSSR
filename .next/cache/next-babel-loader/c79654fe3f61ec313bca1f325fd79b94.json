{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(mapCenterDataSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(mapCenterSaga);\n\n/* global fetch */\nimport { delay } from 'redux-saga';\nimport { all, call, put, take, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport { MAP_CENTER } from '../actionTypes/details';\nimport { mapCenterSuccess } from '../actions/details';\nimport { failure } from '../actions/actions';\nimport { getMapCenterData } from '../api/details';\nes6promise.polyfill();\n\nfunction mapCenterDataSaga(action) {\n  var payload, _yield$call, data;\n\n  return _regeneratorRuntime.wrap(function mapCenterDataSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = action.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getMapCenterData(payload));\n\n        case 4:\n          _yield$call = _context.sent;\n          data = _yield$call.data;\n          _context.next = 8;\n          return put(mapCenterSuccess(data));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(failure(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction mapCenterSaga() {\n  return _regeneratorRuntime.wrap(function mapCenterSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeLatest(MAP_CENTER, mapCenterDataSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nvar detailsSaga = [mapCenterSaga];\nexport default detailsSaga;","map":{"version":3,"sources":["/Users/wangenfei/Desktop/workplace/reactManual/sharingHomesNext/sharingHomesSSR/saga/details.js"],"names":["mapCenterDataSaga","mapCenterSaga","delay","all","call","put","take","takeLatest","es6promise","MAP_CENTER","mapCenterSuccess","failure","getMapCenterData","polyfill","action","payload","data","detailsSaga"],"mappings":";;oDAeWA,iB;qDAWAC,a;;AA1BX;AAEA,SAAQC,KAAR,QAAoB,YAApB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAA+C,oBAA/C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,oBAAP;AAEA,SAAUC,UAAV,QAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAkC,oBAAlC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAEAJ,UAAU,CAACK,QAAX;;AAGA,SAAWb,iBAAX,CAA8Bc,MAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUC,UAAAA,OADV,GACsBD,MADtB,CACUC,OADV;AAAA;AAAA;AAGmB,iBAAMX,IAAI,CAACQ,gBAAgB,CAACG,OAAD,CAAjB,CAAV;;AAHnB;AAAA;AAGWC,UAAAA,IAHX,eAGWA,IAHX;AAAA;AAKI,iBAAMX,GAAG,CAACK,gBAAgB,CAACM,IAAD,CAAjB,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOI,iBAAMX,GAAG,CAACM,OAAO,aAAR,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAWV,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAME,GAAG,CAAC,CACRI,UAAU,CAACE,UAAD,EAAaT,iBAAb,CADF,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,IAAMiB,WAAW,GAAG,CAClBhB,aADkB,CAApB;AAIA,eAAegB,WAAf","sourcesContent":["/* global fetch */\n\nimport {delay} from 'redux-saga'\nimport {all, call, put, take, takeLatest} from 'redux-saga/effects'\nimport es6promise from 'es6-promise'\nimport 'isomorphic-unfetch'\n\nimport {  MAP_CENTER } from '../actionTypes/details'\nimport { mapCenterSuccess  } from '../actions/details'\nimport { failure } from '../actions/actions'\nimport { getMapCenterData } from '../api/details'\n\nes6promise.polyfill()\n\n\nfunction * mapCenterDataSaga (action) {\n  const { payload } = action\n  try {\n    const {data} = yield call(getMapCenterData(payload))\n\n    yield put(mapCenterSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction * mapCenterSaga () {\n  yield all([\n    takeLatest(MAP_CENTER, mapCenterDataSaga)\n  ])\n}\n\nconst detailsSaga = [\n  mapCenterSaga,\n  \n]\nexport default detailsSaga"]},"metadata":{},"sourceType":"module"}