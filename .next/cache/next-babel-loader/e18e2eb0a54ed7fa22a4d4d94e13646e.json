{"ast":null,"code":"/* global fetch */\nimport { all, call, put, take, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport { SEARCHROOMS } from '../actionTypes/searchRooms';\nimport { searchRoomsSuccess } from '../actions/searchRooms';\nimport { failure } from '../actions/actions';\nimport { getRoomsData } from '../api/searchRooms';\nes6promise.polyfill();\n\nfunction* loadDataSaga(action) {\n  const {\n    payload\n  } = action;\n\n  try {\n    const {\n      data\n    } = yield call(getRoomsData(payload));\n    yield put(searchRoomsSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* loginSaga() {\n  yield all([takeLatest(SEARCHROOMS, loadDataSaga)]);\n}\n\nconst searchRoomsSaga = [loginSaga];\nexport default searchRoomsSaga;","map":{"version":3,"sources":["/Users/wangenfei/Desktop/workplace/reactManual/sharingHomesNext/sharingHomesSSR/saga/searchRooms.js"],"names":["all","call","put","take","takeLatest","es6promise","SEARCHROOMS","searchRoomsSuccess","failure","getRoomsData","polyfill","loadDataSaga","action","payload","data","err","loginSaga","searchRoomsSaga"],"mappings":"AAAA;AAEA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAA+C,oBAA/C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,oBAAP;AAEA,SAAUC,WAAV,QAA6B,4BAA7B;AACA,SAASC,kBAAT,QAAoC,wBAApC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AAEAJ,UAAU,CAACK,QAAX;;AAGA,UAAWC,YAAX,CAAyBC,MAAzB,EAAiC;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AACA,MAAI;AACF,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMb,IAAI,CAACQ,YAAY,CAACI,OAAD,CAAb,CAAzB;AAEA,UAAMX,GAAG,CAACK,kBAAkB,CAACO,IAAD,CAAnB,CAAT;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZ,UAAMb,GAAG,CAACM,OAAO,CAACO,GAAD,CAAR,CAAT;AACD;AACF;;AAED,UAAWC,SAAX,GAAwB;AACtB,QAAMhB,GAAG,CAAC,CACRI,UAAU,CAACE,WAAD,EAAcK,YAAd,CADF,CAAD,CAAT;AAGD;;AAED,MAAMM,eAAe,GAAG,CACtBD,SADsB,CAAxB;AAGA,eAAeC,eAAf","sourcesContent":["/* global fetch */\n\nimport {all, call, put, take, takeLatest} from 'redux-saga/effects'\nimport es6promise from 'es6-promise'\nimport 'isomorphic-unfetch'\n\nimport {  SEARCHROOMS } from '../actionTypes/searchRooms'\nimport { searchRoomsSuccess  } from '../actions/searchRooms'\nimport { failure } from '../actions/actions'\nimport {getRoomsData} from '../api/searchRooms'\n\nes6promise.polyfill()\n\n\nfunction * loadDataSaga (action) {\n  const { payload } = action\n  try {\n    const {data} = yield call(getRoomsData(payload))\n\n    yield put(searchRoomsSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction * loginSaga () {\n  yield all([\n    takeLatest(SEARCHROOMS, loadDataSaga)\n  ])\n}\n\nconst searchRoomsSaga = [\n  loginSaga\n]\nexport default searchRoomsSaga"]},"metadata":{},"sourceType":"module"}