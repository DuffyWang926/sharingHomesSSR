{"ast":null,"code":"import \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport { errorList } from '../constants/errorHttp'; // 创建axios实例\n\nvar service = axios.create({\n  // baseURL: process.env.BASE_API, // api 的 base_url\n  timeout: 5000,\n  // 请求超时时间\n  headers: {\n    // \"Content-Type\":'application/json',\n    // 'Cache-Control': 'no-cache',\n    // \"authKey\" : localStorage.getItem('authkey'),\n    // \"appType\":5,\n    // \"version\":'1.0.01'\n    'Access-Control-Allow-Origin': '*',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n});\nservice.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  console.log(error); // for debug\n\n  _Promise.reject(error);\n}); // response 拦截器\n\nservice.interceptors.response.use(function (response) {\n  var res = response.data;\n  console.log(res);\n\n  if (Number(res.code) !== 0) {\n    _message.error(errorList.ZERO_CODE);\n\n    if (Number(res.code) === 1002 || Number(res.code) === 1003) {\n      _message.error(errorList.TOKEN_EXPIRE);\n    }\n\n    return _Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, function (error) {\n  _message.error(errorList.ZERO_CODE);\n\n  return _Promise.reject(error);\n});\n\nvar get = function get(url, params) {\n  return axios.get(url, {\n    params: params\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n};\n\nvar post = function post(url, data) {\n  return axios.post(url, data)[\"catch\"](function (error) {\n    console.log(error);\n  });\n};\n\nvar request = {\n  get: get,\n  post: post\n};\nexport default request;","map":{"version":3,"sources":["/Users/wangenfei/Desktop/workplace/reactManual/sharingHomesNext/sharingHomesSSR/helpers/request.js"],"names":["axios","errorList","service","create","timeout","headers","interceptors","request","use","config","error","console","log","reject","response","res","data","Number","code","ZERO_CODE","TOKEN_EXPIRE","get","url","params","post"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,wBAA1B,C,CACA;;AAEA,IAAIC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzB;AAGAC,EAAAA,OAAO,EAAE,IAJgB;AAIV;AACfC,EAAAA,OAAO,EAAC;AACN;AACA;AACA;AACA;AACA;AACA,mCAA8B,GANxB;AAON,oBAAgB;AAPV;AALiB,CAAb,CAAd;AAgBAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR,SAAOA,MAAP;AACD,CAHH,EAIE,UAAAC,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADO,CACY;;AACnB,WAAQG,MAAR,CAAeH,KAAf;AACD,CAPH,E,CAUA;;AACAR,OAAO,CAACI,YAAR,CAAqBQ,QAArB,CAA8BN,GAA9B,CACE,UAAAM,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;;AACA,MAAIE,MAAM,CAACF,GAAG,CAACG,IAAL,CAAN,KAAqB,CAAzB,EAA4B;AAC1B,aAAQR,KAAR,CAAcT,SAAS,CAACkB,SAAxB;;AAEA,QAAIF,MAAM,CAACF,GAAG,CAACG,IAAL,CAAN,KAAqB,IAArB,IAA6BD,MAAM,CAACF,GAAG,CAACG,IAAL,CAAN,KAAqB,IAAtD,EAA4D;AAC1D,eAAQR,KAAR,CAAcT,SAAS,CAACmB,YAAxB;AACD;;AACD,WAAO,SAAQP,MAAR,CAAe,OAAf,CAAP;AACD,GAPD,MAOO;AACL,WAAOC,QAAQ,CAACE,IAAhB;AACD;AACF,CAdH,EAeE,UAAAN,KAAK,EAAI;AACP,WAAQA,KAAR,CAAcT,SAAS,CAACkB,SAAxB;;AACA,SAAO,SAAQN,MAAR,CAAeH,KAAf,CAAP;AACD,CAlBH;;AAoBA,IAAIW,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAKC,MAAL,EAAe;AACvB,SAAOvB,KAAK,CAACqB,GAAN,CAAUC,GAAV,EAAe;AACpBC,IAAAA,MAAM,EAAEA;AADY,GAAf,WAGA,UAAUb,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GALM,CAAP;AAOD,CARD;;AAUA,IAAIc,IAAI,GAAG,SAAPA,IAAO,CAACF,GAAD,EAAKN,IAAL,EAAa;AACtB,SAAOhB,KAAK,CAACwB,IAAN,CAAWF,GAAX,EAAgBN,IAAhB,WACA,UAAUN,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAHM,CAAP;AAKD,CAND;;AAOA,IAAMH,OAAO,GAAG;AACdc,EAAAA,GAAG,EAAHA,GADc;AAEdG,EAAAA,IAAI,EAAJA;AAFc,CAAhB;AAIA,eAAejB,OAAf","sourcesContent":["import axios from 'axios'\nimport {message} from 'antd'\nimport { errorList } from '../constants/errorHttp'\n// 创建axios实例\n\nlet service = axios.create({\n  // baseURL: process.env.BASE_API, // api 的 base_url\n  \n\n  timeout: 5000, // 请求超时时间\n  headers:{\n    // \"Content-Type\":'application/json',\n    // 'Cache-Control': 'no-cache',\n    // \"authKey\" : localStorage.getItem('authkey'),\n    // \"appType\":5,\n    // \"version\":'1.0.01'\n    'Access-Control-Allow-Origin':'*',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n});\n\nservice.interceptors.request.use(\n  config => {\n    return config\n  },\n  error => {\n    console.log(error) // for debug\n    Promise.reject(error)\n  }\n);\n\n// response 拦截器\nservice.interceptors.response.use(\n  response => {\n    const res = response.data;\n    console.log(res)\n    if (Number(res.code) !== 0) {\n      message.error(errorList.ZERO_CODE)\n\n      if (Number(res.code) === 1002 || Number(res.code) === 1003) {\n        message.error(errorList.TOKEN_EXPIRE)\n      }\n      return Promise.reject('error')\n    } else {\n      return response.data\n    }\n  },\n  error => {\n    message.error(errorList.ZERO_CODE)\n    return Promise.reject(error)\n  }\n)\nlet get = (url,params) =>{\n  return axios.get(url, {\n    params: params\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  \n}\n\nlet post = (url,data) =>{\n  return axios.post(url, data)\n  .catch(function (error) {\n    console.log(error);\n  })\n  \n}\nconst request = {\n  get,\n  post\n}\nexport default request\n"]},"metadata":{},"sourceType":"module"}