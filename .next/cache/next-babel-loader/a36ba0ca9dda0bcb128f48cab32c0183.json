{"ast":null,"code":"/* global fetch */\nimport { delay } from 'redux-saga';\nimport { all, call, put, take, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport { LOGIN, TEST_NODE } from '../actionTypes/header';\nimport { loginSuccess } from '../actions/header';\nimport { failure } from '../actions/actions';\nimport { getUserData, getNodeData } from '../api/header';\nes6promise.polyfill();\n\nfunction* loadDataSaga(action) {\n  const {\n    payload\n  } = action;\n\n  try {\n    const {\n      data\n    } = yield call(getUserData(payload));\n    yield put(loginSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* loginSaga() {\n  yield all([takeLatest(LOGIN, loadDataSaga)]);\n}\n\nfunction* loadNodeSaga(action) {\n  const {\n    payload\n  } = action;\n\n  try {\n    const {\n      data\n    } = yield call(getNodeData(payload));\n    yield put(loginSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* nodeSaga() {\n  yield all([takeLatest(TEST_NODE, loadNodeSaga)]);\n}\n\nconst headerSaga = [loginSaga, nodeSaga];\nexport default headerSaga;","map":{"version":3,"sources":["/Users/wangenfei/Desktop/workplace/reactManual/sharingHomesNext/sharingHomesSSR/saga/header.js"],"names":["delay","all","call","put","take","takeLatest","es6promise","LOGIN","TEST_NODE","loginSuccess","failure","getUserData","getNodeData","polyfill","loadDataSaga","action","payload","data","err","loginSaga","loadNodeSaga","nodeSaga","headerSaga"],"mappings":"AAAA;AAEA,SAAQA,KAAR,QAAoB,YAApB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAA+C,oBAA/C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,oBAAP;AAEA,SAAUC,KAAV,EAAiBC,SAAjB,QAAkC,uBAAlC;AACA,SAASC,YAAT,QAA8B,mBAA9B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,eAAvC;AAEAN,UAAU,CAACO,QAAX;;AAGA,UAAWC,YAAX,CAAyBC,MAAzB,EAAiC;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AACA,MAAI;AACF,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMf,IAAI,CAACS,WAAW,CAACK,OAAD,CAAZ,CAAzB;AAEA,UAAMb,GAAG,CAACM,YAAY,CAACQ,IAAD,CAAb,CAAT;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZ,UAAMf,GAAG,CAACO,OAAO,CAACQ,GAAD,CAAR,CAAT;AACD;AACF;;AAED,UAAWC,SAAX,GAAwB;AACtB,QAAMlB,GAAG,CAAC,CACRI,UAAU,CAACE,KAAD,EAAQO,YAAR,CADF,CAAD,CAAT;AAGD;;AAED,UAAWM,YAAX,CAAyBL,MAAzB,EAAiC;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AACA,MAAI;AACF,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMf,IAAI,CAACU,WAAW,CAACI,OAAD,CAAZ,CAAzB;AAEA,UAAMb,GAAG,CAACM,YAAY,CAACQ,IAAD,CAAb,CAAT;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZ,UAAMf,GAAG,CAACO,OAAO,CAACQ,GAAD,CAAR,CAAT;AACD;AACF;;AAED,UAAWG,QAAX,GAAuB;AACrB,QAAMpB,GAAG,CAAC,CACRI,UAAU,CAACG,SAAD,EAAYY,YAAZ,CADF,CAAD,CAAT;AAGD;;AACD,MAAME,UAAU,GAAG,CACjBH,SADiB,EAEjBE,QAFiB,CAAnB;AAIA,eAAeC,UAAf","sourcesContent":["/* global fetch */\n\nimport {delay} from 'redux-saga'\nimport {all, call, put, take, takeLatest} from 'redux-saga/effects'\nimport es6promise from 'es6-promise'\nimport 'isomorphic-unfetch'\n\nimport {  LOGIN, TEST_NODE } from '../actionTypes/header'\nimport { loginSuccess  } from '../actions/header'\nimport { failure } from '../actions/actions'\nimport {getUserData, getNodeData} from '../api/header'\n\nes6promise.polyfill()\n\n\nfunction * loadDataSaga (action) {\n  const { payload } = action\n  try {\n    const {data} = yield call(getUserData(payload))\n\n    yield put(loginSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction * loginSaga () {\n  yield all([\n    takeLatest(LOGIN, loadDataSaga)\n  ])\n}\n\nfunction * loadNodeSaga (action) {\n  const { payload } = action\n  try {\n    const {data} = yield call(getNodeData(payload))\n\n    yield put(loginSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction * nodeSaga () {\n  yield all([\n    takeLatest(TEST_NODE, loadNodeSaga)\n  ])\n}\nconst headerSaga = [\n  loginSaga,\n  nodeSaga\n]\nexport default headerSaga"]},"metadata":{},"sourceType":"module"}